package gk.ngando.gestioncompte.compte;

import gk.ngando.gestioncompte.mouvement.Mouvement;

import java.util.Enumeration;
import java.util.Vector;

public class Compte {
	private String numeroCompte;
	private Vector<Mouvement> operations;
	private int decouvert;

	public Compte(String numeroCompte) {
		super();
		this.numeroCompte = numeroCompte;
		this.decouvert = 0;
		this.operations = new Vector<Mouvement>();
	}

	public Compte(String nom, int decouvert) {
		this(nom);
		this.decouvert = decouvert;
	}

	public int getSolde() {
		return this.getSommeDepots() - this.getSommeRetraits();
	}

	public int getSommeDepots() {
		int somme = 0;
		Enumeration<Mouvement> listeSomme = operations.elements();
		while (listeSomme.hasMoreElements()) {
			Mouvement mvt = listeSomme.nextElement();
			if (mvt.getTypeMvt().equals(TypeMvt.DEPOT)) {
				somme += mvt.getMontant();
			}
		}
		return somme;
	}

	public int getSommeRetraits() {
		int somme = 0;
		Enumeration<Mouvement> listeSomme = operations.elements();
		while (listeSomme.hasMoreElements()) {
			Mouvement mvt = listeSomme.nextElement();
			if (mvt.getTypeMvt().equals(TypeMvt.RETRAIT)) {
				somme += mvt.getMontant();
			}
		}
		return somme;
	}

	public void depotDe(int montant) {
		operations.add(new Mouvement(montant, TypeMvt.DEPOT));
	}

	public void retraitDe(int montant) {
		if (verifDecouvert(montant)) {
			operations.add(new Mouvement(montant, TypeMvt.RETRAIT));
		}
	}

	public int getDecouvert() {
		return decouvert;
	}

	public void setDecouvert(int decouvert) {
		this.decouvert = decouvert;
	}

	private boolean verifDecouvert(int montant) {
		return ((this.getSolde() + this.getDecouvert()) - montant >= 0);
	}

	public String getNumeroCompte() {
		return numeroCompte;
	}

	public void setNumeroCompte(String numeroCompte) {
		this.numeroCompte = numeroCompte;
	}

	@Override
	public String toString() {
		return "Compte[" + this.numeroCompte + "]";
	}
}
