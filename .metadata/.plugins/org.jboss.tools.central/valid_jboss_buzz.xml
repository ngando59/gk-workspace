<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Red Hat Container Development Kit 3.7 now available</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/gOG2POG5nTs/" /><category term="Announcement" /><category term="Container Development Kit" /><category term="Containers" /><category term="Kubernetes" /><category term="CDK" /><category term="cloud" /><category term="containers" /><category term="Developer Tools" /><category term="minishift" /><category term="OKD" /><category term="Red Hat Container Development Kit" /><category term="Red Hat OpenShift" /><author><name>Doug Tidwell</name></author><id>https://developers.redhat.com/blog/?p=546937</id><updated>2018-12-12T15:00:54Z</updated><published>2018-12-12T15:00:54Z</published><content type="html">&lt;p&gt;We are pleased to announce the availability of the &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt; (CDK) 3.7. CDK 3.7 is based on &lt;a href="https://www.okd.io/minishift/"&gt;Minishift&lt;/a&gt; v1.27.0, a command-line tool to quickly provision an &lt;a href="https://www.openshift.com/"&gt;OpenShift&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; cluster on your local machine for developing cloud- and container-based applications. The CDK also includes OpenShift Container Platform v3.11.14. You can use the CDK on Windows, macOS, or Linux.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s a summary of the new features in CDK 3.7:&lt;/p&gt; &lt;p&gt;&lt;span id="more-546937"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;New features in CDK 3.7&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Uses OpenShift v3.11.14 as the default container platform&lt;/li&gt; &lt;li&gt; &lt;p dir="ltr"&gt;Uses the native system keychain for storing passwords&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p dir="ltr"&gt;Improvements around timezone handling&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p dir="ltr"&gt;A VM driver for hyperkit (&lt;code class="code-style"&gt;--vm-driver hyperkit&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p dir="ltr"&gt;Use of registry.redhat.io for handling authorization and connection&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p dir="ltr"&gt;New system tray icon (technology preview) makes it easier to start/stop &lt;code&gt;minishift&lt;/code&gt; and select which profile to run. The icon appears the first time you run &lt;code class="code-style"&gt;minishift&lt;/code&gt;:&lt;/p&gt; &lt;article class="embedded-entity"&gt;&lt;img class=" alignnone size-medium wp-image-547277 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/12/System-tray-3-7.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/12/System-tray-3-7-300x121.png" alt="The CDK system tray icon" width="300" height="121" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/12/System-tray-3-7-300x121.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/System-tray-3-7.png 343w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/article&gt; &lt;p dir="ltr"&gt;In this example there are two profiles, &lt;code class="code-style"&gt;Minishift&lt;/code&gt; and &lt;code class="code-style"&gt;Faas-Tutorial-Nodejs&lt;/code&gt;. The &lt;code class="code-style"&gt;Faas-Tutorial-Nodejs&lt;/code&gt; profile is currently running.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;What is the CDK?&lt;/h2&gt; &lt;p&gt;The CDK is based on Red Hat Enterprise Linux and provides a pre-built container development environment to help you develop &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;container-based applications&lt;/a&gt; quickly using preconfigured and local versions of OpenShift (the industry-leading Kubernetes distribution). The containers you build can be easily deployed on any Red Hat container host or platform, including RHEL, Red Hat OpenStack Platform, and OpenShift Container Platform.&lt;/p&gt; &lt;h2&gt;Start developing with containers today&lt;/h2&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://developers.redhat.com/products/cdk/download/"&gt;Download CDK 3.7&lt;/a&gt; now. See the &lt;a href="https://developers.redhat.com/products/cdk"&gt;CDK product page&lt;/a&gt; for more information.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fcdk-3-7-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.7%20now%20available" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fcdk-3-7-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.7%20now%20available" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fcdk-3-7-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.7%20now%20available" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fcdk-3-7-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.7%20now%20available" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fcdk-3-7-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.7%20now%20available" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fcdk-3-7-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.7%20now%20available" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fcdk-3-7-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.7%20now%20available" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fcdk-3-7-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.7%20now%20available" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fcdk-3-7-now-available%2F&amp;#038;title=Red%20Hat%20Container%20Development%20Kit%203.7%20now%20available" data-a2a-url="https://developers.redhat.com/blog/2018/12/12/cdk-3-7-now-available/" data-a2a-title="Red Hat Container Development Kit 3.7 now available"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/12/cdk-3-7-now-available/"&gt;Red Hat Container Development Kit 3.7 now available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/gOG2POG5nTs" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We are pleased to announce the availability of the Red Hat Container Development Kit (CDK) 3.7. CDK 3.7 is based on Minishift v1.27.0, a command-line tool to quickly provision an OpenShift and Kubernetes cluster on your local machine for developing cloud- and container-based applications. The CDK also includes OpenShift Container Platform v3.11.14. You can use the CDK on Windows, macOS, or [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/12/cdk-3-7-now-available/"&gt;Red Hat Container Development Kit 3.7 now available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/12/12/cdk-3-7-now-available/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">546937</post-id><dc:creator>Doug Tidwell</dc:creator><dc:date>2018-12-12T15:00:54Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/12/cdk-3-7-now-available/</feedburner:origLink></entry><entry><title>Writing better Spring applications using SpringFu</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/NyZLpFCacEo/" /><category term="Java" /><category term="Kotlin" /><category term="Modern App Dev" /><category term="Red Hat OpenShift Container Platform" /><category term="annotations" /><category term="code readability" /><category term="flow control" /><category term="spring" /><category term="Spring Functional" /><category term="SpringFu" /><author><name>Faisal Masood</name></author><id>https://developers.redhat.com/blog/?p=540267</id><updated>2018-12-12T13:00:47Z</updated><published>2018-12-12T13:00:47Z</published><content type="html">&lt;p&gt;&amp;#8220;Truth can only be found in one place: the code,&amp;#8221; &lt;a href="https://www.goodreads.com/book/show/3735293-clean-code"&gt;Robert C. Martin, &lt;em&gt;Clean Code: A Handbook of Agile Software Craftsmanship&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The way we structure our code has a direct impact on how understandable is it. Code that is easy to follow with no or less hidden functionality is much easier to maintain. It also makes it easier for our fellow programmers to track down bugs in the code. This helps us to avoid Venkat&amp;#8217;s &lt;a href="https://aidium.se/2015/06/tdd-with-venkat/"&gt;Jesus Driven Development&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The way I write Spring applications comprises heavy use of Spring &lt;a href="https://springframework.guru/spring-framework-annotations/"&gt;annotations.&lt;/a&gt; The problem with this approach is that partial flow of the application is controlled by annotations. The complete flow of my code is not in one place, that is, in my code. I need to look back to the documentation to understand the annotations&amp;#8217; behavior. By reading just the code, it is difficult to predict the flow of control.&lt;/p&gt; &lt;p&gt;Luckily, Spring has a new way to code to and it has been called Spring Functional or &lt;a href="https://github.com/spring-projects/spring-fu"&gt;SpringFu&lt;/a&gt;. In this article, I will use &lt;a href="https://kotlinlang.org"&gt;Kotlin&lt;/a&gt; to showcase some of the benefits you get from SpringFu.&lt;/p&gt; &lt;p&gt;&lt;span id="more-540267"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;SpringFu to the rescue&lt;/h2&gt; &lt;p&gt;Let&amp;#8217;s start with a simple Spring-based application using the annotations approach. The first annotation we meet is &lt;code&gt;@SpringBootApplication&lt;/code&gt; and it does &lt;a href="https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-using-springbootapplication-annotation.html"&gt;many&lt;/a&gt; things. Surely this information is not captured in the code when you use this annotation, as you can see in the &amp;#8220;Code with annotations&amp;#8221; section below. When we proceed further in the code with annotations, &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RestController.html"&gt;@RestController&lt;/a&gt; does a series of things which further complicates the readability of code with respect to the control flow.&lt;/p&gt; &lt;p&gt;&lt;code&gt;@RequestMapping&lt;/code&gt;, &lt;code&gt;@Autowired&lt;/code&gt;, and &lt;code&gt;@Component&lt;/code&gt; all add up to the problem I mentioned above. Spring has to use reflection, Kotlin &lt;a href="https://kotlinlang.org/docs/reference/classes.html#inheritance"&gt;open&lt;/a&gt; classes, and all kind of facilities to make this code (magic) work. What if my goal is to read the code—and only the code—to understand the control flow.&lt;/p&gt; &lt;p&gt;Reducing the usage of reflection will also help us in moving towards &lt;a href="https://www.graalvm.org"&gt;GraalVM&lt;/a&gt; based native code. First, take a look at the code with annotations below and see if you can get the flow of control. You can get a full example at my GitHub &lt;a href="https://github.com/masoodfaisal/spring-app-no-annotations"&gt;repository&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Code with annotations&lt;/h3&gt; &lt;pre&gt;@SpringBootApplication class SpringWithAnnotationsApplication fun main(args: Array&amp;#60;String&amp;#62;) { runApplication&amp;#60;SpringWithAnnotationsApplication&amp;#62;(*args) } @RestController @RequestMapping("/events") class EventHandler { @Autowired lateinit var eventService: EventService @GetMapping("/") fun getAllEvents () : List&amp;#60;Event&amp;#62; { return eventService.getAllEvents() } } @Component class EventService { fun getAllEvents() : List&amp;#60;Event&amp;#62;{ return listOf( Event(name = "event1", description = "desc1"), Event(name = "event2", description = "desc2") ) } } data class Event (val name: String, val description: String)&lt;/pre&gt; &lt;p&gt;Visit Stack Overflow (some say Stack Overflow is the true technical lead) and you can find many &lt;a href="https://stackoverflow.com/questions/49018415/proper-configuration-of-spring-boot-2-and-junit-5"&gt;questions&lt;/a&gt; about the right way to use annotations. The number and variety of questions will give you an idea of how important code readability is.&lt;/p&gt; &lt;p&gt;&amp;#8220;Programs must be written for people to read, and only incidentally for machines to execute,&amp;#8221; &lt;a href="https://en.wikiquote.org/wiki/Programming_languages"&gt;Abelson and Sussman&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Code with no annotations&lt;/h3&gt; &lt;p&gt;Now let&amp;#8217;s try to write the same code using the SpringFu approach. The code is more readable and I can follow the full flow by just reading it. The flow of the code below is as follows.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I have a &lt;code&gt;main&lt;/code&gt; function which loads my &lt;code&gt;appSimple&lt;/code&gt; &lt;a href="https://en.wikipedia.org/wiki/Domain-specific_language"&gt;DSL&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;The &lt;code&gt;AppSimple&lt;/code&gt; DSL &lt;em&gt;imports&lt;/em&gt; the Spring beans (which I have loaded in the &lt;code&gt;eventBeans&lt;/code&gt; DSL) and configures what the server should do using the &lt;code&gt;eventRoutes&lt;/code&gt; DSL.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;/h3&gt; &lt;pre&gt;//create an application //remember no @SpringBootApplication fun main(args: Array&amp;#60;String&amp;#62;) { appSimple.run() } //using the application dsl, i define what my service will listen to val appSimple = application { //use the beans i define import(eventBeans) //http server listens for this endpoint server { import(::eventRoutes) codecs { jackson() } } } //define beans val eventBeans = beans { bean&amp;#60;EventService&amp;#62;() bean&amp;#60;EventHandler&amp;#62;() } //define on what endpont i would be listening //@RestController //@RequestMapping("/events") //@GetMapping("/") fun eventRoutes(handler: EventHandler) = router { "/events".nest { GET("/", handler::generateResponse) } } //create the handler for http request class EventHandler(private val eventService: EventService) { fun generateResponse(request: ServerRequest) = ServerResponse.ok().body( BodyInserters.fromObject(eventService.getAllEvents()) ) } //business logic // no need to @Component class EventService { fun getAllEvents(): List&amp;#60;Event&amp;#62; { return mutableListOf( Event(name = "event1", description = "desc1"), Event(name = "event2", description = "desc2") ) } } data class Event(val name: String, val description: String)&lt;/pre&gt; &lt;h2&gt;No need to open classes&lt;/h2&gt; &lt;p&gt;When using annotations, we need to make all classes &lt;a href="https://kotlinlang.org/docs/reference/compiler-plugins.html"&gt;open&lt;/a&gt; in order for Spring to work. See the &lt;a href="https://github.com/masoodfaisal/spring-app-no-annotations/blob/master/spring-with-annotations/pom.xml"&gt;pom.xml&lt;/a&gt; section below from the &lt;a href="https://github.com/masoodfaisal/spring-app-no-annotations"&gt;code&lt;/a&gt;. With SpringFu, &lt;a href="https://docs.oracle.com/javase/tutorial/java/IandI/final.html"&gt;final classes&lt;/a&gt;  are acceptable. Note the usage of the &lt;em&gt;kotlin-maven-plugin &lt;/em&gt;below showcasing the use of automatically opening all the classes. This is some additional logic outside of my code and makes things difficult to read.&lt;/p&gt; &lt;pre&gt;&amp;#60;plugin&amp;#62; &amp;#60;artifactId&amp;#62;kotlin-maven-plugin&amp;#60;/artifactId&amp;#62; &amp;#60;groupId&amp;#62;org.jetbrains.kotlin&amp;#60;/groupId&amp;#62; &amp;#60;configuration&amp;#62; &amp;#60;args&amp;#62; &amp;#60;arg&amp;#62;-Xjsr305=strict&amp;#60;/arg&amp;#62; &amp;#60;/args&amp;#62;     &amp;#60;compilerPlugins&amp;#62;     &amp;#60;plugin&amp;#62;spring&amp;#60;/plugin&amp;#62;     &amp;#60;/compilerPlugins&amp;#62; &amp;#60;/configuration&amp;#62;   &amp;#60;dependencies&amp;#62;   &amp;#60;dependency&amp;#62;     &amp;#60;groupId&amp;#62;org.jetbrains.kotlin&amp;#60;/groupId&amp;#62;       &amp;#60;artifactId&amp;#62;kotlin-maven-allopen&amp;#60;/artifactId&amp;#62;       &amp;#60;version&amp;#62;${kotlin.version}&amp;#60;/version&amp;#62;     &amp;#60;/dependency&amp;#62;   &amp;#60;/dependencies&amp;#62; &amp;#60;/plugin&amp;#62;&lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-fu"&gt;SpringFu&lt;/a&gt; is an exciting new project that enables us to write cleaner, more-readable code and offers more control for Spring-based applications. It builds on your existing Java/Kotlin knowledge, which makes the task of learning it a bit easier. One of the exciting goals is to able to write native applications using &lt;a href="https://www.graalvm.org"&gt;GraalVM&lt;/a&gt;. Be aware that some of the SpringFu components are not production-ready yet.&lt;/p&gt; &lt;p&gt;Kotlin is an exciting new programming language especially if you are coming from a Java background. You can start your Kotlin journey by attending this &lt;a href="https://www.coursera.org/learn/kotlin-for-java-developers"&gt;coursera course&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In addition, you might find these other Spring articles helpful.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fwriting-better-spring-applications-using-springfu%2F&amp;#38;linkname=Writing%20better%20Spring%20applications%20using%20SpringFu" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fwriting-better-spring-applications-using-springfu%2F&amp;#38;linkname=Writing%20better%20Spring%20applications%20using%20SpringFu" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fwriting-better-spring-applications-using-springfu%2F&amp;#38;linkname=Writing%20better%20Spring%20applications%20using%20SpringFu" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fwriting-better-spring-applications-using-springfu%2F&amp;#38;linkname=Writing%20better%20Spring%20applications%20using%20SpringFu" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fwriting-better-spring-applications-using-springfu%2F&amp;#38;linkname=Writing%20better%20Spring%20applications%20using%20SpringFu" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fwriting-better-spring-applications-using-springfu%2F&amp;#38;linkname=Writing%20better%20Spring%20applications%20using%20SpringFu" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fwriting-better-spring-applications-using-springfu%2F&amp;#38;linkname=Writing%20better%20Spring%20applications%20using%20SpringFu" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fwriting-better-spring-applications-using-springfu%2F&amp;#38;linkname=Writing%20better%20Spring%20applications%20using%20SpringFu" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F12%2Fwriting-better-spring-applications-using-springfu%2F&amp;#038;title=Writing%20better%20Spring%20applications%20using%20SpringFu" data-a2a-url="https://developers.redhat.com/blog/2018/12/12/writing-better-spring-applications-using-springfu/" data-a2a-title="Writing better Spring applications using SpringFu"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/12/writing-better-spring-applications-using-springfu/"&gt;Writing better Spring applications using SpringFu&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/NyZLpFCacEo" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;&amp;#8220;Truth can only be found in one place: the code,&amp;#8221; Robert C. Martin, Clean Code: A Handbook of Agile Software Craftsmanship. The way we structure our code has a direct impact on how understandable is it. Code that is easy to follow with no or less hidden functionality is much easier to maintain. It also [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/12/writing-better-spring-applications-using-springfu/"&gt;Writing better Spring applications using SpringFu&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/12/12/writing-better-spring-applications-using-springfu/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">540267</post-id><dc:creator>Faisal Masood</dc:creator><dc:date>2018-12-12T13:00:47Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/12/writing-better-spring-applications-using-springfu/</feedburner:origLink></entry><entry><title>Work on Apache Camel 3 has finally started</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/GtbcW8I2g00/work-on-apache-camel-3-has-finally.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="roadmap" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-work_on_apache_camel_3_has_finally_started</id><updated>2018-12-12T10:04:30Z</updated><published>2018-12-12T10:04:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;We are starting the work on &lt;a href="http://camel.apache.org/2018/12/11/work-on-apache-camel-3-is-beginning.html"&gt;Apache Camel 3&lt;/a&gt;. We are working at multiple levels to improve Camel and introduce new features.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-Gw2sMXrosMc/XBDbnWE37BI/AAAAAAAAByk/xuB5MzD2sMQHXAgZb4Ogu8OSWvUHZiTgQCLcBGAs/s1600/IMG_8717.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1600" data-original-width="1600" height="320" src="https://4.bp.blogspot.com/-Gw2sMXrosMc/XBDbnWE37BI/AAAAAAAAByk/xuB5MzD2sMQHXAgZb4Ogu8OSWvUHZiTgQCLcBGAs/s320/IMG_8717.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;The first work has actually started by Guillaume Nodet in the &lt;a href="http://camel.465427.n5.nabble.com/HEADS-UP-Camel-3-x-branch-tp5824287.html"&gt;start of October&lt;/a&gt;, where he jump started by cleaning up the codebase, removed deprecated code and components, improving the routing engine and other internals in the core. His work is published on the &lt;a href="https://github.com/apache/camel/tree/sandbox/camel-3.x"&gt;sandbox/3.x branch&lt;/a&gt;. We plan to use his work as the baseline for the actual Camel 3. Andrea has helped by aligning this branch with all the changes from the master branch (2.x) so its fully up to date. The intention is to switch over the sandbox/3.x branch as the new master branch, so we call can start working on that branch and being able to add new features, components etc. (as always) for Camel 3.&lt;br /&gt;&lt;br /&gt;For 2.x users we will create a 2.x branch where we plan to do 1 or 2 more last 2.x releases, eg 2.24 and 2.25, before 3.0 is ready and released.&lt;br /&gt;&lt;br /&gt;Here in the beginning of the Camel 3 work is to continue the work from Guillaume Nodet and finish up the cleanup of the codebase, modularize the camel-core, etc.&lt;br /&gt;&lt;br /&gt;We invite community users and any Camel committers and developers who has interest to help with the Camel 3 work. We have talked about doing a number of milestone releases of 3.x that can help give feedback to us quicker and faster. For example any Camel users of 2.x can try to upgrade and use the 3.0 milestone releases to report back their findings.&lt;br /&gt;&lt;br /&gt;Camel 3 is planned to be a time boxed release to avoid it dragging out “forever”, and with a bit of good luck we will have Camel 3 released after the summer 2019.&lt;br /&gt;&lt;br /&gt;We will keep the community posted on the progress, and as always we love &lt;a href="https://github.com/apache/camel/blob/master/CONTRIBUTING.md"&gt;contributions&lt;/a&gt; and any feedback you may have.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The 3-humped Camel is coming in 2019 ;)&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=yg2Puuj61u8:AlbVRhxx6vE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=yg2Puuj61u8:AlbVRhxx6vE:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=yg2Puuj61u8:AlbVRhxx6vE:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=yg2Puuj61u8:AlbVRhxx6vE:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=yg2Puuj61u8:AlbVRhxx6vE:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=yg2Puuj61u8:AlbVRhxx6vE:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=yg2Puuj61u8:AlbVRhxx6vE:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/yg2Puuj61u8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/GtbcW8I2g00" height="1" width="1" alt=""/&gt;</content><summary>We are starting the work on Apache Camel 3. We are working at multiple levels to improve Camel and introduce new features. The first work has actually started by Guillaume Nodet in the start of October, where he jump started by cleaning up the codebase, removed deprecated code and components, improving the routing engine and other internals in the core. His work is published on the sandbox/3.x bra...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2018-12-12T10:04:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/yg2Puuj61u8/work-on-apache-camel-3-has-finally.html</feedburner:origLink></entry><entry><title>Deploying jBPM Business Apps on Docker</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vKs0CgMOr_Y/deploying-jbpm-business-apps-on-docker.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Tihomir Surdilovic</name></author><id>searchisko:content:id:jbossorg_blog-deploying_jbpm_business_apps_on_docker</id><updated>2018-12-11T18:14:05Z</updated><published>2018-12-11T18:14:00Z</published><content type="html">jBPM Business Applications have an out-of-the-box configurations to deploy them as docker containers. We have created the video below to show you how easy it is to do that. The video also shows some useful docker commands to run after you have deployed your jBPM Business app as docker container. Enjoy.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/y1JUPaJBoVI/0.jpg" src="https://www.youtube.com/embed/y1JUPaJBoVI?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vKs0CgMOr_Y" height="1" width="1" alt=""/&gt;</content><summary>jBPM Business Applications have an out-of-the-box configurations to deploy them as docker containers. We have created the video below to show you how easy it is to do that. The video also shows some useful docker commands to run after you have deployed your jBPM Business app as docker container. Enjoy.</summary><dc:creator>Tihomir Surdilovic</dc:creator><dc:date>2018-12-11T18:14:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/12/deploying-jbpm-business-apps-on-docker.html</feedburner:origLink></entry><entry><title>CodeReady Workspaces for OpenShift (Beta) – It works on their machines too</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/YBzeHUDkIfA/" /><category term="Announcement" /><category term="CodeReady Workspaces" /><category term="Eclipse Che" /><category term="Modern App Dev" /><category term="factories" /><category term="stacks" /><category term="workspaces" /><author><name>Doug Tidwell</name></author><id>https://developers.redhat.com/blog/?p=544147</id><updated>2018-12-11T15:00:00Z</updated><published>2018-12-11T15:00:00Z</published><content type="html">&lt;p&gt;“It works on my machine.” If you write code with, for, or near anybody else, you’ve said those words at least once. Months ago I set up a library or package or environment variable or &lt;em&gt;something&lt;/em&gt; on my machine and I haven’t thought about it since. So the code works for me, but it may take a long time to figure out what’s missing on your machine.&lt;/p&gt; &lt;h2&gt;Code Ready Workspaces and Factories&lt;/h2&gt; &lt;p&gt;Built on &lt;a href="https://github.com/eclipse/che/blob/master/README.md"&gt;the open-source Eclipse Che project&lt;/a&gt;, CodeReady Workspaces solves this problem (and a couple of others that we’ll talk about in a minute) by delivering secure, sharable developer &lt;em&gt;workspaces&lt;/em&gt;. Those workspaces include all the tools and dependencies needed to code, build, test, run, and debug your applications. The entire product runs in an OpenShift cluster (on-premises or in the cloud), so there’s nothing to install on your machine. Or mine.&lt;/p&gt; &lt;p&gt;&lt;span id="more-544147"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;CodeReady Workspaces also makes onboarding easy. You can create a &lt;em&gt;factory&lt;/em&gt; based on a workspace. Any authorized person on your team can open the factory’s URL and get a new copy of that workspace. To make the factory even more powerful, you can have it do certain tasks when a user creates a new workspace. As an example, when the new workspace is created, you can have the factory clone a repo, open some files, build them, start a server in the workspace, and deploy code to that local server. Your teammate gets on board within minutes, they have the source in front of them, and they can work with the deployed code right away.&lt;/p&gt; &lt;p&gt;We’ve created &lt;a href="https://youtu.be/5PDm7tTHB9c"&gt;a video on how to use workspaces and factories&lt;/a&gt; if you’d like to watch it. If you’d rather go directly to a factory URL and try Eclipse Che for yourself, visit &lt;a href="https://red.ht/che-pet-clinic"&gt;red.ht/che-pet-clinic&lt;/a&gt;. (Requires a free &lt;a href="https://openshift.io"&gt;openshift.io&lt;/a&gt; account.)&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/5PDm7tTHB9c?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h2&gt;CodeReady Stacks&lt;/h2&gt; &lt;p&gt;Underneath each workspace is a &lt;em&gt;stack&lt;/em&gt;, a container image that includes language runtimes, compilers, tools, and utilities. CodeReady Workspaces ships with stacks for many different languages. Stacks can go beyond just language support, however. A stack can contain multiple containers, allowing you to code in a replica of your production environment. A single stack might have compilers, tools, and an app server in one container and a database in the other.&lt;/p&gt; &lt;p&gt;Even better, you can create custom stacks and share those with your team. If you have a project that requires tools that aren’t part of one of the base stacks, you can take a base stack’s container, add whatever you need to that container, and use the new container image as the base of a new stack. Assuming everyone on your team uses that custom stack, you know everyone has the same libraries, runtimes, and tools.&lt;/p&gt; &lt;p&gt;If you suspect you’ll need a custom stack for your project, we’ve got &lt;a href="https://youtu.be/ODsuvd4YgN0"&gt;a video showing you how to create one&lt;/a&gt;. The example in the video builds a C++ version of the 2048 game, so you can play and pretend to work while learning.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/ODsuvd4YgN0?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;By the way: CodeReady Workspaces delivers a full-featured IDE that includes code completion, syntax highlighting, refactoring, debugging, and everything else you would expect from a great development environment. (Although you can use SSH to access your workspaces from Eclipse and other tools if you prefer.)&lt;/p&gt; &lt;h2&gt;Securing your code&lt;/h2&gt; &lt;p&gt;Another development issue is securing the source code and other intellectual property stored on laptops. With CodeReady Workspaces, the working copy of the code is centrally managed on the OpenShift cluster where the developer workspace runs. There is nothing on the local machine anymore. Your laptops might be anywhere, but you always know where your source code is.&lt;/p&gt; &lt;p&gt;And speaking of security, CodeReady Workspaces also includes Red Hat SSO to provide role-based access control for your workspaces and factories. It integrates with both LDAP and Active Directory.&lt;/p&gt; &lt;h2&gt;Get started!&lt;/h2&gt; &lt;p&gt;Best of all, it’s easy to sign up for the beta. &lt;a href="https://developers.redhat.com/products/codeready-workspaces/overview"&gt;Visit the product page&lt;/a&gt; to get the code and everything you’ll ever need to know about the product.&lt;/p&gt; &lt;p&gt;CodeReady Workspaces gives you greater security, faster onboarding, and makes sure your code works on their machines too.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fcodeready-workspaces-openshift%2F&amp;#38;linkname=CodeReady%20Workspaces%20for%20OpenShift%20%28Beta%29%20%E2%80%93%20It%20works%20on%20their%20machines%20too" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fcodeready-workspaces-openshift%2F&amp;#38;linkname=CodeReady%20Workspaces%20for%20OpenShift%20%28Beta%29%20%E2%80%93%20It%20works%20on%20their%20machines%20too" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fcodeready-workspaces-openshift%2F&amp;#38;linkname=CodeReady%20Workspaces%20for%20OpenShift%20%28Beta%29%20%E2%80%93%20It%20works%20on%20their%20machines%20too" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fcodeready-workspaces-openshift%2F&amp;#38;linkname=CodeReady%20Workspaces%20for%20OpenShift%20%28Beta%29%20%E2%80%93%20It%20works%20on%20their%20machines%20too" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fcodeready-workspaces-openshift%2F&amp;#38;linkname=CodeReady%20Workspaces%20for%20OpenShift%20%28Beta%29%20%E2%80%93%20It%20works%20on%20their%20machines%20too" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fcodeready-workspaces-openshift%2F&amp;#38;linkname=CodeReady%20Workspaces%20for%20OpenShift%20%28Beta%29%20%E2%80%93%20It%20works%20on%20their%20machines%20too" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fcodeready-workspaces-openshift%2F&amp;#38;linkname=CodeReady%20Workspaces%20for%20OpenShift%20%28Beta%29%20%E2%80%93%20It%20works%20on%20their%20machines%20too" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fcodeready-workspaces-openshift%2F&amp;#38;linkname=CodeReady%20Workspaces%20for%20OpenShift%20%28Beta%29%20%E2%80%93%20It%20works%20on%20their%20machines%20too" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fcodeready-workspaces-openshift%2F&amp;#038;title=CodeReady%20Workspaces%20for%20OpenShift%20%28Beta%29%20%E2%80%93%20It%20works%20on%20their%20machines%20too" data-a2a-url="https://developers.redhat.com/blog/2018/12/11/codeready-workspaces-openshift/" data-a2a-title="CodeReady Workspaces for OpenShift (Beta) – It works on their machines too"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/11/codeready-workspaces-openshift/"&gt;CodeReady Workspaces for OpenShift (Beta) &amp;#8211; It works on their machines too&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/YBzeHUDkIfA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;“It works on my machine.” If you write code with, for, or near anybody else, you’ve said those words at least once. Months ago I set up a library or package or environment variable or something on my machine and I haven’t thought about it since. So the code works for me, but it may [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/11/codeready-workspaces-openshift/"&gt;CodeReady Workspaces for OpenShift (Beta) &amp;#8211; It works on their machines too&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/12/11/codeready-workspaces-openshift/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">544147</post-id><dc:creator>Doug Tidwell</dc:creator><dc:date>2018-12-11T15:00:00Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/11/codeready-workspaces-openshift/</feedburner:origLink></entry><entry><title>Processing CloudEvents with Eclipse Vert.x</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/TUNdyBF8YX8/" /><category term="Cloud" /><category term="Java" /><category term="Modern App Dev" /><category term="Red Hat OpenShift Application Runtimes" /><category term="Serverless" /><category term="Stream Processing" /><category term="c++" /><category term="CloudEvents" /><category term="cncf" /><category term="Eclipse Vert.x" /><category term="event processing" /><category term="go" /><category term="Javascript" /><category term="python" /><category term="reactive" /><category term="serverless" /><category term="vert.x" /><author><name>Matthias Wessendorf</name></author><id>https://developers.redhat.com/blog/?p=544667</id><updated>2018-12-11T13:00:49Z</updated><published>2018-12-11T13:00:49Z</published><content type="html">&lt;p&gt;Our connected world is full of events that are triggered or received by different software services. One of the big issues is that event publishers tend to describe events differently and in ways that are mostly incompatible with each other.&lt;/p&gt; &lt;p&gt;To address this, the &lt;a href="https://github.com/cncf/wg-serverless"&gt;Serverless Working Group&lt;/a&gt; from the &lt;a href="https://www.cncf.io/" rel="nofollow"&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF) recently announced version 0.2 of the &lt;a href="https://cloudevents.io/"&gt;CloudEvents&lt;/a&gt; specification. The specification aims to describe event data in a common, standardized way. To some degree, a CloudEvent is an abstract envelope with some specified attributes that describe a concrete event and its data.&lt;/p&gt; &lt;p&gt;Working with CloudEvents is simple. This article shows how to use the powerful JVM toolkit provided by Vert.x to either generate or receive and process CloudEvents.&lt;/p&gt; &lt;p&gt;&lt;span id="more-544667"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;a id="user-content-sdks-for-working-with-cloudevents" class="anchor" href="https://gist.github.com/matzew/beb71c9bc7062b1cf18aa6d080b458ce#sdks-for-working-with-cloudevents"&gt;&lt;/a&gt;SDKs for working with CloudEvents&lt;/h2&gt; &lt;p&gt;In addition to the specification, the CloudEvents team from the Serverless Working Group is working on different SDKs for various platforms, such as &lt;a href="https://github.com/cloudevents/sdk-javascript"&gt;JavaScript&lt;/a&gt;, &lt;a href="https://github.com/cloudevents/sdk-go"&gt;Golang&lt;/a&gt;, &lt;a href="https://github.com/cloudevents/sdk-csharp"&gt;C Sharp&lt;/a&gt;, &lt;a href="https://github.com/cloudevents/sdk-java"&gt;Java&lt;/a&gt;, and &lt;a href="https://github.com/cloudevents/sdk-python"&gt;Python&lt;/a&gt;. This article will give a quick overview of the Java SDK and how it can be used inside an application built with Eclipse Vert.x.&lt;/p&gt; &lt;p&gt;The API is very simple and contains a generic &lt;code&gt;CloudEvent&lt;/code&gt; class as well as a builder to create an instance of a &lt;code&gt;CloudEvent&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;final CloudEvent&amp;#60;MyCustomEvent&amp;#62; cloudEvent = new CloudEventBuilder&amp;#60;MyCustomEvent&amp;#62;() .data(new MyCustomEvent(...)) .type("My.Cloud.Event.Type") .id(UUID.randomUUID().toString();) .source(URI.create("/trigger");) .build();&lt;/pre&gt; &lt;p&gt;Above, we use the &lt;code&gt;CloudEventBuilder&lt;/code&gt; to create a very simple &lt;code&gt;CloudEvent&lt;/code&gt; instance. However, in isolation, the API does not show its strength.&lt;/p&gt; &lt;h2&gt;&lt;a id="user-content-eclipse-vertx" class="anchor" href="https://gist.github.com/matzew/beb71c9bc7062b1cf18aa6d080b458ce#eclipse-vertx"&gt;&lt;/a&gt;Eclipse Vert.x&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/13/eclipse-vertx-first-application/" rel="nofollow"&gt;Eclipse Vert.x&lt;/a&gt; is a toolkit for building reactive applications on the JVM. It is event-driven and nonblocking, which means applications can handle a lot of concurrency using a small number of kernel threads. See the resources below for more info on Vert.x. Fortun&lt;/p&gt; &lt;p&gt;Fortunately, support for Eclipse Vert.x is included in the CloudEvents Java SDK:&lt;/p&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.cloudevents&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;http-vertx&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;0.2.0&amp;#60;/version&amp;#62; &amp;#60;/dependency&amp;#62;&lt;/pre&gt; &lt;h3&gt;&lt;a id="user-content-sending-a-cloudevent-to-a-remote-service" class="anchor" href="https://gist.github.com/matzew/beb71c9bc7062b1cf18aa6d080b458ce#sending-a-cloudevent-to-a-remote-service"&gt;&lt;/a&gt;Sending a CloudEvent to a remote service&lt;/h3&gt; &lt;p&gt;Now that we have our &lt;code&gt;CloudEvent&lt;/code&gt; object, capturing our event data, we want to send it to a remote cloud service, which will then process it:&lt;/p&gt; &lt;pre&gt;final HttpClientRequest request = vertx.createHttpClient().post(8080, "localhost", "/"); // add a client response handler request.handler(resp -&amp;#62; { // react on the server response }); // write the CloudEvent to the given HTTP Post request object VertxCloudEvents.create().writeToHttpClientRequest(cloudEvent, request); request.end(); &lt;/pre&gt; &lt;p&gt;After creating an HTTP Post request, we set up an async handler to deal with the &lt;em&gt;future&lt;/em&gt; response of the server. Finally, the &lt;code&gt;writeToHttpClientRequest&lt;/code&gt; of our &lt;code&gt;VertxCloudEvents&lt;/code&gt; utility is used to serialize the actual &lt;code&gt;CloudEvent&lt;/code&gt; object to the given &lt;code&gt;HttpClientRequest&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;&lt;a id="user-content-receiving-cloudevents-with-vertx" class="anchor" href="https://gist.github.com/matzew/beb71c9bc7062b1cf18aa6d080b458ce#receiving-cloudevents-with-vertx"&gt;&lt;/a&gt;Receiving CloudEvents with Vert.x&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;VertxCloudEvents&lt;/code&gt; utility also contains a different function to receive a &lt;code&gt;CloudEvent&lt;/code&gt; inside an Eclipse Vert.x HTTP server application:&lt;/p&gt; &lt;pre&gt;import io.cloudevents.http.reactivex.vertx.VertxCloudEvents; import io.vertx.core.http.HttpHeaders; import io.vertx.reactivex.core.AbstractVerticle; public class CloudEventVerticle extends AbstractVerticle { public void start() { vertx.createHttpServer() .requestHandler(req -&amp;#62; VertxCloudEvents.create().rxReadFromRequest(req) .subscribe((receivedEvent, throwable) -&amp;#62; { if (receivedEvent != null) { // I got a CloudEvent object: System.out.println("The event type: " + receivedEvent.getType()) } })) .rxListen(8080) .subscribe(server -&amp;#62; { System.out.println("Server running!"); }); } }&lt;/pre&gt; &lt;p&gt;Above, we start a simple &lt;code&gt;HTTPServer&lt;/code&gt;, using the &lt;a href="https://vertx.io/docs/vertx-rx/java2/" rel="nofollow"&gt;Vert.x API for RxJava 2&lt;/a&gt;. Inside the reactive &lt;em&gt;request handler,&lt;/em&gt; we invoke the &lt;code&gt;rxReadFromRequest()&lt;/code&gt; method and &lt;em&gt;subscribe&lt;/em&gt; to the CloudEvents it returns for further processing. Now we can work with the &lt;code&gt;CloudEvent&lt;/code&gt; object inside our own server-side framework!&lt;/p&gt; &lt;h2&gt;&lt;a id="user-content-conclusion-and-outlook" class="anchor" href="https://gist.github.com/matzew/beb71c9bc7062b1cf18aa6d080b458ce#conclusion-and-outlook"&gt;&lt;/a&gt;Conclusion and Outlook&lt;/h2&gt; &lt;p&gt;Working with CloudEvents is simple and Vert.x provides a powerful JVM toolkit to either generate or receive and process CloudEvents in our system. CloudEvents are being adopted by more and more tools and frameworks such as &lt;a href="https://github.com/knative/"&gt;Knative&lt;/a&gt;, which uses CloudEvents to exchange data between different components and services in a standardized format.&lt;/p&gt; &lt;p&gt;The CloudEvent specification is in its early stages with its current 0.2 version. However, even in such infancy, it is generating traction and proving an increasingly useful specification to allow interoperability between applications.&lt;/p&gt; &lt;h2&gt;Additonal Resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/tag/vert.x/"&gt;Vert.x&lt;/a&gt;: &lt;ul&gt; &lt;li&gt;&lt;em&gt;&lt;a href="https://developers.redhat.com/books/building-reactive-microservices-java/"&gt;Building Reactive Microservices in Java: Asynchronous and Event-Based Application Design&lt;/a&gt;, &lt;/em&gt;a free ebook&lt;/li&gt; &lt;li&gt;&lt;em&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/13/eclipse-vertx-first-application/"&gt;Introduction to Vert.x&lt;/a&gt;&lt;/em&gt; article series by &lt;a href="https://developers.redhat.com/blog/author/cescoffier/"&gt;Clement Escoffier&lt;/a&gt; &lt;ul&gt; &lt;li&gt;Part 1—&lt;a href="https://developers.redhat.com/blog/2018/03/13/eclipse-vertx-first-application/"&gt;Introduction to Vert.x &amp;#8211; My First Vert.x Application&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Part 2—&lt;a href="https://developers.redhat.com/blog/2018/03/22/eclipse-vert-x-application-configuration/"&gt;Eclipse Vert.x Application Configuration&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Part 3—&lt;a href="https://developers.redhat.com/blog/2018/03/29/rest-vert-x/"&gt;Some REST with Vert.x&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Part 4—&lt;a href="https://developers.redhat.com/blog/2018/04/09/accessing-data-reactive-way/"&gt;Accessing Data, the Reactive Way&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Part 5—&lt;a href="https://developers.redhat.com/blog/author/cescoffier/"&gt;When Vert.x meets Reactive eXtensions&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/tag/cloudevents/"&gt;CloudEvents&lt;/a&gt;: &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/10/15/eventflow-event-driven-microservices-on-openshift-part-1/"&gt;EventFlow: Event-driven microservices on Red Hat OpenShift&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fprocessing-cloudevents-vertx%2F&amp;#38;linkname=Processing%20CloudEvents%20with%20Eclipse%20Vert.x" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fprocessing-cloudevents-vertx%2F&amp;#38;linkname=Processing%20CloudEvents%20with%20Eclipse%20Vert.x" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fprocessing-cloudevents-vertx%2F&amp;#38;linkname=Processing%20CloudEvents%20with%20Eclipse%20Vert.x" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fprocessing-cloudevents-vertx%2F&amp;#38;linkname=Processing%20CloudEvents%20with%20Eclipse%20Vert.x" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fprocessing-cloudevents-vertx%2F&amp;#38;linkname=Processing%20CloudEvents%20with%20Eclipse%20Vert.x" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fprocessing-cloudevents-vertx%2F&amp;#38;linkname=Processing%20CloudEvents%20with%20Eclipse%20Vert.x" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fprocessing-cloudevents-vertx%2F&amp;#38;linkname=Processing%20CloudEvents%20with%20Eclipse%20Vert.x" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fprocessing-cloudevents-vertx%2F&amp;#38;linkname=Processing%20CloudEvents%20with%20Eclipse%20Vert.x" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F11%2Fprocessing-cloudevents-vertx%2F&amp;#038;title=Processing%20CloudEvents%20with%20Eclipse%20Vert.x" data-a2a-url="https://developers.redhat.com/blog/2018/12/11/processing-cloudevents-vertx/" data-a2a-title="Processing CloudEvents with Eclipse Vert.x"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/11/processing-cloudevents-vertx/"&gt;Processing CloudEvents with Eclipse Vert.x&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/TUNdyBF8YX8" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Our connected world is full of events that are triggered or received by different software services. One of the big issues is that event publishers tend to describe events differently and in ways that are mostly incompatible with each other. To address this, the Serverless Working Group from the Cloud Native Computing Foundation (CNCF) recently announced version 0.2 of the CloudEvents [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/11/processing-cloudevents-vertx/"&gt;Processing CloudEvents with Eclipse Vert.x&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/12/11/processing-cloudevents-vertx/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">544667</post-id><dc:creator>Matthias Wessendorf</dc:creator><dc:date>2018-12-11T13:00:49Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/11/processing-cloudevents-vertx/</feedburner:origLink></entry><entry><title>Infinispan Spring Boot Starter 2.1.1.Final and 1.0.4.Final are out!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/xivPfweb8oo/infinispan-spring-boot-211final-and.html" /><category term="9.4.4.Final" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><category term="Spring" scheme="searchisko:content:tags" /><category term="spring-boot" scheme="searchisko:content:tags" /><category term="spring-boot starters" scheme="searchisko:content:tags" /><category term="spring-session" scheme="searchisko:content:tags" /><author><name>Katia Aresti</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_spring_boot_starter_2_1_1_final_and_1_0_4_final_are_out</id><updated>2018-12-11T12:54:35Z</updated><published>2018-12-11T12:43:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Dear Infinispan and Spring Boot users,&lt;br /&gt;&lt;br /&gt;We have just released &lt;a href="https://github.com/infinispan/infinispan-spring-boot" target="_blank"&gt;Infinispan Spring Boot&lt;/a&gt;&amp;nbsp;&lt;b&gt;2.1.1.Final &lt;/b&gt;and&lt;b&gt; 1.0.4.Final&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;1.0.4.Final&lt;/b&gt; is using&amp;nbsp;&lt;b&gt;Spring Boot 1.5.17.RELEASE&lt;/b&gt;&lt;br /&gt;&lt;div&gt;&lt;b&gt;2.1.1.Final&lt;/b&gt; is using&amp;nbsp;&lt;b&gt;Spring Boot 2.1.1.RELEASE&lt;/b&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;Both starters are now using Infinispan's&amp;nbsp;&lt;a href="https://blog.infinispan.org/2018/12/infinispan-944final-and-1000alpha2-out.html" target="_blank"&gt;last stable release: 9.4.4.Final&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;9.4.4.Final provides full support to &lt;b&gt;JDK 11,&lt;/b&gt;&amp;nbsp;Spring 4 &lt;b&gt;&lt;u&gt;and&lt;/u&gt;&lt;/b&gt; 5.&lt;br /&gt;Concerning Spring 5, it includes &lt;a href="https://spring.io/projects/spring-session" target="_blank"&gt;Spring Session 2.1.2.RELEASE&lt;/a&gt; support.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;You can find these releases in the maven central repository.&lt;br /&gt;&lt;br /&gt;Please report any issues in our&amp;nbsp;&lt;a href="https://issues.jboss.org/projects/ISPN"&gt;issue tracker&lt;/a&gt;&amp;nbsp;and join the conversation in our&amp;nbsp;&lt;a href="https://infinispan.zulipchat.com/"&gt;Zulip Chat&lt;/a&gt;&amp;nbsp;to shape up our next release.&lt;br /&gt;&lt;br /&gt;Enjoy,&lt;br /&gt;&lt;br /&gt;The Infinispan Team&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/F5-8JF7ogoY" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/xivPfweb8oo" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan and Spring Boot users, We have just released Infinispan Spring Boot 2.1.1.Final and 1.0.4.Final. 1.0.4.Final is using Spring Boot 1.5.17.RELEASE 2.1.1.Final is using Spring Boot 2.1.1.RELEASE  Both starters are now using Infinispan's last stable release: 9.4.4.Final. 9.4.4.Final provides full support to JDK 11, Spring 4 and 5. Concerning Spring 5, it includes Spring Session 2.1.2.R...</summary><dc:creator>Katia Aresti</dc:creator><dc:date>2018-12-11T12:43:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/F5-8JF7ogoY/infinispan-spring-boot-211final-and.html</feedburner:origLink></entry><entry><title>Demystifying the Red Hat Decision Manager and Process Automation Manager Remote Client</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lOShwBFMGzY/" /><category term="Java" /><category term="JBoss BRMS" /><category term="Red Hat Decision Manager" /><category term="jboss brms" /><category term="KIE" /><category term="KIE Server" /><category term="KIE Server Client" /><category term="Red Hat Process Automation Manager" /><category term="RHPAM" /><author><name>Duncan Doyle</name></author><id>https://developers.redhat.com/blog/?p=540217</id><updated>2018-12-10T21:13:39Z</updated><published>2018-12-10T21:13:39Z</published><content type="html">&lt;p&gt;KIE-Server is the light-weight, cloud-native, rules and process execution runtime of the &lt;a href="https://developers.redhat.com/products/red-hat-decision-manager/overview/"&gt;Red Hat Decision Manager&lt;/a&gt; (RHDM) and &lt;a href="https://developers.redhat.com/products/rhpam/overview/"&gt;Red Hat Process Automation Manager&lt;/a&gt; (RHPAM) platforms. Lately, I&amp;#8217;ve gotten more and more questions on how to use the KIE-Server Client Java API to interact with the KIE-Server execution runtime of &lt;a href="https://developers.redhat.com/products/red-hat-decision-manager/overview/"&gt;RHDM&lt;/a&gt; (formerly called Red Hat JBoss BRMS) and &lt;a href="https://developers.redhat.com/products/rhpam/overview/"&gt;RHPAM&lt;/a&gt; (RHPAM). To answers these questions, and to create a future reference, I decided to write a number of code examples, accompanied by this article.&lt;/p&gt; &lt;p&gt;The KIE-Server Client Java API provides an easy way for Java applications to communicate with the KIE-Server execution engine of RHDM and RHPAM. The API abstracts the application from the underlying REST and/or JMS communication protocol and transport, making integrations with the server easier to build, test, and maintain.&lt;/p&gt; &lt;p&gt;&lt;span id="more-540217"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What is the KIE-Server Client?&lt;/h2&gt; &lt;p&gt;The KIE-Server Client is a small, lightweight Java library, providing a pure Java API, that allows Java clients to interact with Red Hat Decision Manager and RHPAM execution servers over a RESTful (or JMS) communication channel. This abstracts the client from the marshaling of the request and response data into the format that the execution server expects (either JSON, JAXB, or XSTREAM), as well as the handling of sending requests and receiving responses over HTTP (or via a JMS Broker when using the JMS API). This greatly simplifies the code of Java clients that want to interact with our platforms.&lt;/p&gt; &lt;h2&gt;The API&lt;/h2&gt; &lt;p&gt;Let&amp;#8217;s first look at the API itself. The API is structured around the &lt;code&gt;KieServicesClient&lt;/code&gt;. The &lt;code&gt;KieServicesClient&lt;/code&gt; is one of the main components that can be built from the &lt;code&gt;KieServicesFactory&lt;/code&gt;, and it gives us access to the various runtimes that KIE-Server provides. KIE-Server uses a plug-in based system, and every functionality of the platform is provided through plug-ins.&lt;/p&gt; &lt;p&gt;For each plugin that exposes a remote interface, the client provides a matching client-side service. For example, to execute rules via the KIE-Server rules engine, we use the &lt;code&gt;RuleServicesClient&lt;/code&gt;, Decision Model and Notation (DMN) models are evaluated with the &lt;code&gt;DMNServicesClient&lt;/code&gt;, and interaction with the process engine is done via the &lt;code&gt;ProcessServicesClient&lt;/code&gt;. Other available clients are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;CaseServicesClient&lt;/code&gt; to interact with the Case Management system&lt;/li&gt; &lt;li&gt;&lt;code&gt;UserTaskServicesClient&lt;/code&gt; to interact with the process engine&amp;#8217;s UserTask engine&lt;/li&gt; &lt;li&gt;&lt;code&gt;QueryServicesClient&lt;/code&gt; to execute queries against the server&lt;/li&gt; &lt;li&gt;&lt;code&gt;SolverServicesClient&lt;/code&gt; to integrate with the OptaPlanner capabilities&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;And there are various administration clients.&lt;/p&gt; &lt;p&gt;The code below shows how a specific client, in this case, a &lt;code&gt;ProcessServicesClient&lt;/code&gt;, can be retrieved from the main &lt;code&gt;KieServicesClient&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;KieServicesClient kieServicesClient = KieServicesFactory.newKieServicesClient(kieServicesConfig); ProcessServicesClientprocessClient=kieServicesClient.getServicesClient(ProcessServicesClient.class);&lt;/pre&gt; &lt;p&gt;The various remote client APIs, where possible, are very close to the standard Java APIs that KIE, Drools, Red Hat JBoss Frameworks (formerly Red Hat JBoss jBPM), and OptaPlanner expose. However, there are some differences that users need to be aware of.&lt;/p&gt; &lt;h2&gt;Using the right KIE-Session&lt;/h2&gt; &lt;p&gt;When using Decision Manager/Drools as an embedded library, a &lt;code&gt;KieSession&lt;/code&gt;, the session in which you insert data and executes rule, is retrieved from a &lt;code&gt;KieContainer&lt;/code&gt;.&lt;b&gt; &lt;/b&gt;The &lt;code&gt;KieContainer&lt;/code&gt; API allows you to select the specific &lt;code&gt;KieSession&lt;/code&gt; you want to use. Different &lt;code&gt;KieSession&lt;/code&gt;s can be configured in the &lt;code&gt;kmodule.xml&lt;/code&gt; deployment descriptor of the rules deployment unit (the KJAR). This allows us to define and configure different kinds of sessions, for example, stateless &lt;code&gt;KieSession&lt;/code&gt;s, stateful &lt;code&gt;KieSession&lt;/code&gt;s, or &lt;code&gt;KieSession&lt;/code&gt;s that use a pseudo-clock—whatever our use-case requires.&lt;/p&gt; &lt;p&gt;Selecting the right &lt;code&gt;KieSession&lt;/code&gt; when using the remote KIE-Server Client is done differently, because the API does not expose the &lt;code&gt;KieContainer&lt;/code&gt;. Instead, we need to specify the &amp;#8220;ID&amp;#8221; of the &lt;code&gt;KieSession&lt;/code&gt; to be used in a &lt;code&gt;BatchExecutorCommand&lt;/code&gt;, as shown here:&lt;/p&gt; &lt;pre&gt;BatchExecutionCommand batchExecutionCommand = commandFactory.newBatchExecution(commands, "default-stateless-kiession");&lt;/pre&gt; &lt;p&gt;This will result in a JSON payload that contains a &amp;#8220;lookup&amp;#8221; entry, which tells the KIE-Server which session to use for the given request:&lt;/p&gt; &lt;pre&gt;{ "lookup" : "default-stateless-ksession", "commands" : [ {&lt;/pre&gt; &lt;p&gt;The ID should match the ID of a &lt;code&gt;KieSession&lt;/code&gt; defined in the KJAR&amp;#8217;s &lt;code&gt;kmodule.xml&lt;/code&gt;, as shown here:&lt;/p&gt; &lt;pre&gt;&amp;#60;kmodule xmlns="http://www.drools.org/xsd/kmodule" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&amp;#62; &amp;#60;kbase name="default-kbase" default="true" eventProcessingMode="cloud" equalsBehavior="equality"&amp;#62; &amp;#60;ksession name="&lt;b&gt;default-stateless-ksession&lt;/b&gt;" type="stateless" default="true" clockType="realtime"/&amp;#62; &amp;#60;/kbase&amp;#62; &amp;#60;/kmodule&amp;#62;&lt;/pre&gt; &lt;p&gt;When using the remote client API, it is recommended to use stateless &lt;code&gt;KieSession&lt;/code&gt;s, unless your use-case explicitly requires stateful sessions.&lt;/p&gt; &lt;h2&gt;Marshaling and custom data types&lt;/h2&gt; &lt;p&gt;When using a remote API, data needs to be sent from the client to the server in a format that both parties understand. KIE-Server supports three formats: JSON, JAXB, and XSTREAM. Some of the KIE-Server APIs, for example, the API to start a business process, accept generic datatypes as input, such as a &lt;code&gt;Map&lt;/code&gt;. This &lt;code&gt;Map&lt;/code&gt; is used to send process start variables to the process execution engine.&lt;/p&gt; &lt;p&gt;When our process variables consist of custom defined datatypes, for example, &lt;code&gt;Applicant&lt;/code&gt; or &lt;code&gt;Loan&lt;/code&gt;, we need to register these datatypes with the KIE-Server Client. This allows the Marshaller component to correctly marshal and unmarshal these datatypes when communicating with the remote KIE-Server. Java classes can simply be registered via the &lt;code&gt;KieServicesConfiguration&lt;/code&gt;, as shown here:&lt;/p&gt; &lt;pre&gt;KieServicesConfiguration kieServicesConfig = KieServicesFactory.newRestConfiguration(KIE_SERVER_URL, credentialsProvider); Set&amp;#60;Class&amp;#60;?&amp;#62;&amp;#62; extraClasses = new HashSet&amp;#60;&amp;#62;(); extraClasses.add(Application.class); extraClasses.add(Applicant.class); extraClasses.add(Property.class); kieServicesConfig.addExtraClasses(extraClasses);&lt;/pre&gt; &lt;h2&gt;Examples&lt;/h2&gt; &lt;p&gt;In &lt;a href="https://github.com/jbossdemocentral/kie-server-client-examples"&gt;this&lt;/a&gt; GitHub repository, I&amp;#8217;ve collected three examples of KIE-Server Clients that communicate with remote services on the KIE-Server. The examples show how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Start a business process.&lt;/li&gt; &lt;li&gt;Execute rules.&lt;/li&gt; &lt;li&gt;Evaluate a DMN model.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Three &lt;code&gt;Main&lt;/code&gt; classes are provided that demonstrate the usage of the API. Comments in the code provide further explanation of the APIs being used.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;This article provided a brief introduction to the KIE-Server Client Java API, provided some tips and tricks for how to best use the API, and concluded with examples that demonstrate how to start a process, execute rules, and evaluate a DMN model.&lt;/p&gt; &lt;p&gt;Here are related articles that might be of interest:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/19/red-hat-decision-manager-7/"&gt;Getting Started with Red Hat Decision Manager 7&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/19/try-red-hat-decision-openshift/"&gt;Quickly try Red Hat Decision Manager in your cloud&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/12/04/quickly-try-red-hat-process-automation-manager-in-your-cloud/"&gt;Quickly try Red Hat Process Automation Manager in your cloud&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/01/spring-boot-enabled-business-process-automation-with-red-hat-process-automation-manager/#more-523727"&gt;Spring Boot-enabled business process automation with Red Hat Process Automation Manager&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img class="alignleft" title="Duncan Doyle" src="https://i0.wp.com/en.gravatar.com/userimage/106146330/2f0c06257ede9b94dfb276ccbdb8cab4.jpg" alt="Duncan Doyle" width="119" height="119" /&gt;&lt;/p&gt; &lt;h3&gt;About the author:&lt;/h3&gt; &lt;p&gt;&lt;a href="http://twitter.com/DuncanDoyle" target="_blank" rel="noopener"&gt;Duncan Doyle&lt;/a&gt; is the Technical Marketing Manager for the Decision Manager and Process Automation Manager platforms at Red Hat. With a background in Red Hat Consulting and Services, Duncan has worked extensively with large Red Hat customers to build advanced, open-source, business-rules and business process management solutions.&lt;/p&gt; &lt;p&gt;He has a strong background in technologies and concepts such as Service Oriented Architecture, Continuous Integration and Delivery, rules engines, and BPM platforms and is a subject matter expert (SME) on multiple JBoss Middleware technologies, including, but not limited to, JBoss EAP, HornetQ, Fuse, DataGrid, BRMS, and BPMSuite. When he’s not working on open-source solutions and technology, he is building Lego with his son and daughter or jamming along some 90’s rock-music on his Fender Stratocaster.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fdemystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client%2F&amp;#38;linkname=Demystifying%20the%20Red%20Hat%20Decision%20Manager%20and%20Process%20Automation%20Manager%20Remote%20Client" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fdemystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client%2F&amp;#38;linkname=Demystifying%20the%20Red%20Hat%20Decision%20Manager%20and%20Process%20Automation%20Manager%20Remote%20Client" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fdemystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client%2F&amp;#38;linkname=Demystifying%20the%20Red%20Hat%20Decision%20Manager%20and%20Process%20Automation%20Manager%20Remote%20Client" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fdemystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client%2F&amp;#38;linkname=Demystifying%20the%20Red%20Hat%20Decision%20Manager%20and%20Process%20Automation%20Manager%20Remote%20Client" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fdemystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client%2F&amp;#38;linkname=Demystifying%20the%20Red%20Hat%20Decision%20Manager%20and%20Process%20Automation%20Manager%20Remote%20Client" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fdemystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client%2F&amp;#38;linkname=Demystifying%20the%20Red%20Hat%20Decision%20Manager%20and%20Process%20Automation%20Manager%20Remote%20Client" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fdemystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client%2F&amp;#38;linkname=Demystifying%20the%20Red%20Hat%20Decision%20Manager%20and%20Process%20Automation%20Manager%20Remote%20Client" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fdemystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client%2F&amp;#38;linkname=Demystifying%20the%20Red%20Hat%20Decision%20Manager%20and%20Process%20Automation%20Manager%20Remote%20Client" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fdemystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client%2F&amp;#038;title=Demystifying%20the%20Red%20Hat%20Decision%20Manager%20and%20Process%20Automation%20Manager%20Remote%20Client" data-a2a-url="https://developers.redhat.com/blog/2018/12/10/demystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client/" data-a2a-title="Demystifying the Red Hat Decision Manager and Process Automation Manager Remote Client"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/10/demystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client/"&gt;Demystifying the Red Hat Decision Manager and Process Automation Manager Remote Client&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lOShwBFMGzY" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;KIE-Server is the light-weight, cloud-native, rules and process execution runtime of the Red Hat Decision Manager (RHDM) and Red Hat Process Automation Manager (RHPAM) platforms. Lately, I&amp;#8217;ve gotten more and more questions on how to use the KIE-Server Client Java API to interact with the KIE-Server execution runtime of RHDM (formerly called Red Hat JBoss BRMS) and [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/10/demystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client/"&gt;Demystifying the Red Hat Decision Manager and Process Automation Manager Remote Client&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/12/10/demystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">540217</post-id><dc:creator>Duncan Doyle</dc:creator><dc:date>2018-12-10T21:13:39Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/10/demystifying-the-red-hat-decision-manager-and-process-automation-manager-remote-client/</feedburner:origLink></entry><entry><title>Red Hat KubeCon Seattle 2018 Events &amp; Demos</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OSXkg08qmLY/" /><category term="Cloud" /><category term="Events" /><category term="Kubernetes" /><author><name>David Millsaps</name></author><id>https://developers.redhat.com/blog/?p=546607</id><updated>2018-12-10T17:02:18Z</updated><published>2018-12-10T17:02:18Z</published><content type="html">&lt;h2&gt;&lt;b&gt;Visit Red Hat at booth D1&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;Stop by the Red Hat booth D1 to explore 1:1 demos and speak with our open source specialists. We&amp;#8217;ll be giving away Red Hat beanies, stickers, Command Line Hero coloring books and more, while supplies last.&lt;/p&gt; &lt;h2&gt;Booth Demos&lt;/h2&gt; &lt;h3&gt;&lt;b&gt;Develop Anywhere: tools for cloud native development &lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Tue Dec 11 10:40 11:00am&lt;br /&gt; &lt;span style="font-weight: 400;"&gt;Tugdual Grall&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;An overview of the tools developers can use to build cloud native applications.&lt;/span&gt;&lt;span id="more-546607"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;CodeReady Workspaces: A kube-native IDE&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Thursday Dec 13 1:10pm&lt;br /&gt; &lt;span style="font-weight: 400;"&gt;Tugdual Grall&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;During this presentation you will learn how Workspaces, powered by Eclipse Che, provide a browser based IDE, and developer pods to build and shape  any type of application for Kubernetes and OpenShift.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Sample application candidate: https://github.com/eivantsov/microservice-app-example&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Import a microservices application from a factory&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Get the project running in Eclipse Che Workspaces &lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;code&gt;&lt;b&gt;odo&lt;/b&gt;&lt;/code&gt;&lt;b&gt;: OpenShift command line for developers&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Tue Dec 11 4:50pm&lt;br /&gt; &lt;span style="font-weight: 400;"&gt;Steve Speicher &amp;#38; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Tomas Kral &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;During this presentation you will learn how to create multi-container applications and see code changes directly on OpenShift.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;DevStudio: integrated development tools for OpenShift&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Wed Dec 12 10:40am&lt;br /&gt; &lt;span style="font-weight: 400;"&gt;Tugdual Grall&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Developers need a rich environment to develop JavaEE, Spring, Integration/Fuse applications and be able to deploy them easily on their OpenShift cluster.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Using VSCode for Kubernetes&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Wed Dec 12 1:10&lt;br /&gt; &lt;span style="font-weight: 400;"&gt;Mohit Suman&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;During this presentation we will discuss the architecture of  tools based on Language Servers, and open API allowing the development of:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Plugins for VSCode&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;AI/Analytics integrated into all the tools&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;b&gt;Going Serverless with OpenShift and Knative&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Tue Dec 11 1:10pm&lt;br /&gt; &lt;span style="font-weight: 400;"&gt;Paul Morie &lt;/span&gt;&lt;/p&gt; &lt;h2&gt;VS Code Meetup&lt;/h2&gt; &lt;div class="chunk"&gt; &lt;div class="flex flex--row eventDateTime"&gt; &lt;div class="flex-item"&gt; &lt;div class="eventTimeDisplay eventDateTime--hover"&gt;&lt;time class="" datetime="1544583600000"&gt;&lt;span class="eventTimeDisplay-startDate"&gt;Tuesday, December 11, 2018 &lt;span class="eventTimeDisplay-startDate-time"&gt;7:00 PM&lt;/span&gt;&lt;/span&gt;&lt;span class="eventTimeDisplay-endDate"&gt; to &lt;span class="eventTimeDisplay-endDate-partialTime"&gt;9:00 PM&lt;/span&gt;&lt;/span&gt;&lt;/time&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="flex flex--row"&gt; &lt;div class="flex-item"&gt; &lt;div class="chunk"&gt; &lt;address&gt;Microsoft Reactor Westlake&lt;/address&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;style type="text/css"&gt;#meetup_oembed .mu_clearfix:after { visibility: hidden; display: block; font-size: 0; content: " "; clear: both; height: 0; }* html #meetup_oembed .mu_clearfix, *:first-child+html #meetup_oembed .mu_clearfix { zoom: 1; }#meetup_oembed { background:#eee;border:1px solid #ccc;padding:10px;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;margin:0; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 12px; }#meetup_oembed h3 { font-weight:normal; margin:0 0 10px; padding:0; line-height:26px; font-family:Georgia,Palatino,serif; font-size:24px }#meetup_oembed p { margin: 0 0 10px; padding:0; line-height:16px; }#meetup_oembed img { border:none; margin:0; padding:0; }#meetup_oembed a, #meetup_oembed a:visited, #meetup_oembed a:link { color: #1B76B3; text-decoration: none; cursor: hand; cursor: pointer; }#meetup_oembed a:hover { color: #1B76B3; text-decoration: underline; }#meetup_oembed a.mu_button { font-size:14px; -moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;border:2px solid #A7241D;color:white!important;text-decoration:none;background-color: #CA3E47; background-image: -moz-linear-gradient(top, #ca3e47, #a8252e); background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #a8252e), color-stop(1, #ca3e47));disvplay:inline-block;padding:5px 10px; }#meetup_oembed a.mu_button:hover { color: #fff!important; text-decoration: none; }#meetup_oembed .photo { width:50px; height:50px; overflow:hidden;background:#ccc;float:left;margin:0 5px 0 0;text-align:center;padding:1px; }#meetup_oembed .photo img { height:50px }#meetup_oembed .number { font-size:18px; }#meetup_oembed .thing { text-transform: uppercase; color: #555; }&lt;/style&gt; &lt;div id="meetup_oembed" style="height:302px"&gt; &lt;div style="max-height:262px;overflow:hidden"&gt; &lt;h3&gt;VS Code and Red Hat &amp;#8211; Develop for K8s&lt;/h3&gt; &lt;p style="margin:5px 0;font-size:16px"&gt;Tuesday, Dec 11, 2018, 7:00 PM&lt;/p&gt; &lt;p style="margin: 0 0 5px;"&gt;&lt;span style="font-size:14px"&gt;Microsoft Reactor Westlake&lt;/span&gt;&lt;br /&gt;&lt;span style="font-size:12px;"&gt;320 Westlake Ave N Seattle, WA&lt;/span&gt;&lt;/p&gt; &lt;p&gt; &lt;span style="color:#4F8A10;font-size:16px;"&gt;7 Members Attending&lt;/span&gt; &lt;/p&gt; &lt;div style="margin:5px 0 10px" class="mu_clearfix"&gt; &lt;div class="photo"&gt;&lt;img src="https://secure.meetupstatic.com/photos/member/2/9/f/0/thumb_250150736.jpeg" /&gt;&lt;/div&gt; &lt;div class="photo"&gt;&lt;img src="https://secure.meetupstatic.com/photos/member/5/3/f/e/thumb_233121502.jpeg" /&gt;&lt;/div&gt; &lt;div class="photo"&gt;&lt;img src="https://secure.meetupstatic.com/photos/member/9/6/0/c/thumb_46838412.jpeg" /&gt;&lt;/div&gt; &lt;div class="photo"&gt;&lt;img src="https://secure.meetupstatic.com/photos/member/6/6/b/0/thumb_283046288.jpeg" /&gt;&lt;/div&gt; &lt;div class="photo"&gt;&lt;img src="https://secure.meetupstatic.com/photos/member/d/5/2/c/thumb_131514572.jpeg" /&gt;&lt;/div&gt; &lt;div class="photo"&gt;&lt;img src="https://secure.meetupstatic.com/photos/member/6/c/1/3/thumb_283047667.jpeg" /&gt;&lt;/div&gt; &lt;div class="photo"&gt;&lt;img src="https://secure.meetupstatic.com/photos/member/b/b/e/6/thumb_89028102.jpeg" /&gt;&lt;/div&gt; &lt;/p&gt;&lt;/div&gt; &lt;p style="line-height:16px"&gt;Are you interested in hearing what Red Hat is doing with VS Code, either with Java or with any of the other plugins Red Hat has developed? Are you a Java programmer who uses VS Code? Are you interested in using VS Code for developing apps that will run on OpenShift or Kubernetes?Then you should come to see us next week in Seattle! Red Hat and Micro&amp;#8230;&lt;/p&gt; &lt;/p&gt;&lt;/div&gt; &lt;p style="margin:10px 0 0;"&gt;&lt;a href="https://www.meetup.com/VS-Code-Red-Hat-Developers/events/257041085/" target="_blank" class="mu_button"&gt;&lt;strong&gt;Check out this Meetup &amp;#8594;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;p id="rYmjUjC"&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fred-hat-kubecon-seattle-2018-events-demos%2F&amp;#38;linkname=Red%20Hat%20KubeCon%20Seattle%202018%20Events%20%26%20Demos" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fred-hat-kubecon-seattle-2018-events-demos%2F&amp;#38;linkname=Red%20Hat%20KubeCon%20Seattle%202018%20Events%20%26%20Demos" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fred-hat-kubecon-seattle-2018-events-demos%2F&amp;#38;linkname=Red%20Hat%20KubeCon%20Seattle%202018%20Events%20%26%20Demos" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fred-hat-kubecon-seattle-2018-events-demos%2F&amp;#38;linkname=Red%20Hat%20KubeCon%20Seattle%202018%20Events%20%26%20Demos" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fred-hat-kubecon-seattle-2018-events-demos%2F&amp;#38;linkname=Red%20Hat%20KubeCon%20Seattle%202018%20Events%20%26%20Demos" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fred-hat-kubecon-seattle-2018-events-demos%2F&amp;#38;linkname=Red%20Hat%20KubeCon%20Seattle%202018%20Events%20%26%20Demos" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fred-hat-kubecon-seattle-2018-events-demos%2F&amp;#38;linkname=Red%20Hat%20KubeCon%20Seattle%202018%20Events%20%26%20Demos" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fred-hat-kubecon-seattle-2018-events-demos%2F&amp;#38;linkname=Red%20Hat%20KubeCon%20Seattle%202018%20Events%20%26%20Demos" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F10%2Fred-hat-kubecon-seattle-2018-events-demos%2F&amp;#038;title=Red%20Hat%20KubeCon%20Seattle%202018%20Events%20%26%20Demos" data-a2a-url="https://developers.redhat.com/blog/2018/12/10/red-hat-kubecon-seattle-2018-events-demos/" data-a2a-title="Red Hat KubeCon Seattle 2018 Events &amp;#38; Demos"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/10/red-hat-kubecon-seattle-2018-events-demos/"&gt;Red Hat KubeCon Seattle 2018 Events &amp;#038; Demos&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OSXkg08qmLY" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Visit Red Hat at booth D1 Stop by the Red Hat booth D1 to explore 1:1 demos and speak with our open source specialists. We&amp;#8217;ll be giving away Red Hat beanies, stickers, Command Line Hero coloring books and more, while supplies last. Booth Demos Develop Anywhere: tools for cloud native development Tue Dec 11 10:40 [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/10/red-hat-kubecon-seattle-2018-events-demos/"&gt;Red Hat KubeCon Seattle 2018 Events &amp;#038; Demos&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/12/10/red-hat-kubecon-seattle-2018-events-demos/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">546607</post-id><dc:creator>David Millsaps</dc:creator><dc:date>2018-12-10T17:02:18Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/10/red-hat-kubecon-seattle-2018-events-demos/</feedburner:origLink></entry><entry><title>jBPM Business Applications Demo - Process terminal using Spring Shell</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/PC_CLcNUPnA/jbpm-business-applications-demo-process.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Tihomir Surdilovic</name></author><id>searchisko:content:id:jbossorg_blog-jbpm_business_applications_demo_process_terminal_using_spring_shell</id><updated>2018-12-10T15:27:31Z</updated><published>2018-12-10T15:22:00Z</published><content type="html">&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-ekL1Ihu2gmQ/XA5_zTChdMI/AAAAAAAAhn0/hudFqPNnIXkI4wa3Vcmm0h7iKYEUqoR7ACLcBGAs/s1600/Screen%2BShot%2B2018-12-09%2Bat%2B11.49.19%2BPM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1162" data-original-width="1600" height="232" src="https://2.bp.blogspot.com/-ekL1Ihu2gmQ/XA5_zTChdMI/AAAAAAAAhn0/hudFqPNnIXkI4wa3Vcmm0h7iKYEUqoR7ACLcBGAs/s320/Screen%2BShot%2B2018-12-09%2Bat%2B11.49.19%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;So far our &lt;a href="https://github.com/business-applications"&gt;jBPM Business Applications demos&lt;/a&gt; have involved some sort of web-based UI for interacting with our business processes. Sometimes a web-ui is not needed and working with processes via an interactive terminal is the best way to get this done.&lt;br /&gt;&lt;br /&gt;In this demo we show how to use &lt;a href="https://docs.spring.io/spring-shell/docs/current-SNAPSHOT/reference/htmlsingle/"&gt;Spring Shell&lt;/a&gt; inside your jBPM Business Application created via &lt;a href="http://start.jbpm.org/"&gt;start.jbpm.org&lt;/a&gt;. Here is a quick screenshot of the demo application:&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-fCIC4EuPMro/XA6AGYMaPlI/AAAAAAAAhn8/1zloJ2DkpFwUqDT68E4KRNHyQLxQIgGfwCLcBGAs/s1600/shell-demo.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="943" data-original-width="1600" height="188" src="https://1.bp.blogspot.com/-fCIC4EuPMro/XA6AGYMaPlI/AAAAAAAAhn8/1zloJ2DkpFwUqDT68E4KRNHyQLxQIgGfwCLcBGAs/s320/shell-demo.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Demo schreenshot&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;We start our demo app as usual using the already provided launch scripts but once it starts we do not launch our browser and go to localhost:8090 (default) to access it, but instead we are presented with a prompt and can start typing in our commands to interact with our business processes.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Spring Shell provides some very useful commands out of the box, such as "help", "clear", "exit", "history", and "stacktrace". Our demo app defined ontop of that our own custom commands to interact with our business processes.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Commands that we define in our business app demo are:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;deploy&lt;/b&gt; &amp;lt;groupId&amp;gt; &amp;lt;artifactId&amp;gt; &amp;lt;version&amp;gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;processdefs&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;processinstances&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;startprocess&lt;/b&gt; &amp;lt;processDefId&amp;gt; &amp;lt;deploymentId&amp;gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Our &lt;b&gt;deploy&lt;/b&gt; command allows us to deploy a kjar module which is available in our local maven repository. The demo app comes with &lt;a href="https://github.com/business-applications/sample-shell/tree/master/sample-shell-secondkjar"&gt;one such module&lt;/a&gt;&amp;nbsp;which you can use to deploy after the application has started with the command:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-1_Zdp8rkpO0/XA6C8CdUHwI/AAAAAAAAhoI/pudOmNWIIEsfCjbzohfZlDskm65S7wPUwCLcBGAs/s1600/Screen%2BShot%2B2018-12-10%2Bat%2B10.14.31%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="250" data-original-width="986" height="101" src="https://2.bp.blogspot.com/-1_Zdp8rkpO0/XA6C8CdUHwI/AAAAAAAAhoI/pudOmNWIIEsfCjbzohfZlDskm65S7wPUwCLcBGAs/s400/Screen%2BShot%2B2018-12-10%2Bat%2B10.14.31%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;The &lt;b&gt;processdefs&lt;/b&gt; command simply shows all currently available process definition (across all deployments):&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-C0k2uMJqNZ0/XA6DPY4M7aI/AAAAAAAAhoQ/h3n2fq1vAB8Pt6mQLDj10yqs7HBl43bXgCLcBGAs/s1600/Screen%2BShot%2B2018-12-10%2Bat%2B10.15.54%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="348" data-original-width="1600" height="86" src="https://1.bp.blogspot.com/-C0k2uMJqNZ0/XA6DPY4M7aI/AAAAAAAAhoQ/h3n2fq1vAB8Pt6mQLDj10yqs7HBl43bXgCLcBGAs/s400/Screen%2BShot%2B2018-12-10%2Bat%2B10.15.54%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The&amp;nbsp;&lt;b&gt;startprocess &lt;/b&gt;command allows you to start a business process. It takes in the process definition id and the deployment unit id (if deployment unit id is not specified, the default one is assumed). So for example to start our "firstTestProcess" business process we can do:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/--kCzFT6NmYQ/XA6DsnjNxhI/AAAAAAAAhoY/Byngy0gBcYUSUhGoDFni2eflOeeBa9v5ACLcBGAs/s1600/Screen%2BShot%2B2018-12-10%2Bat%2B10.17.55%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="178" data-original-width="1264" height="56" src="https://3.bp.blogspot.com/--kCzFT6NmYQ/XA6DsnjNxhI/AAAAAAAAhoY/Byngy0gBcYUSUhGoDFni2eflOeeBa9v5ACLcBGAs/s400/Screen%2BShot%2B2018-12-10%2Bat%2B10.17.55%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;Lastly, the &lt;b&gt;processinstances&lt;/b&gt; command shows all process instances that are available, for example:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-fU0mIAiIhDA/XA6EF42w43I/AAAAAAAAhog/wtyF_KhJbg8F8-N25x89mdnXWUUiMdEqwCLcBGAs/s1600/Screen%2BShot%2B2018-12-10%2Bat%2B10.19.35%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="316" data-original-width="716" height="176" src="https://1.bp.blogspot.com/-fU0mIAiIhDA/XA6EF42w43I/AAAAAAAAhog/wtyF_KhJbg8F8-N25x89mdnXWUUiMdEqwCLcBGAs/s400/Screen%2BShot%2B2018-12-10%2Bat%2B10.19.35%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;Finally here is a youtube video where we run the demo and show off all the commands. The video also explains the code and how to create custom commands using Spring Boot and Spring Shell.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/pq3lGAUzlKQ/0.jpg" frameborder="0" height="266" src="https://www.youtube.com/embed/pq3lGAUzlKQ?feature=player_embedded" width="320"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;(This is the first time I tried creating a youtube video intro so &lt;b&gt;please don't laug&lt;/b&gt;h ....too much :) )&lt;br /&gt;&lt;br /&gt;Hope this demo helps you guys get some ideas on how to create cool jBPM business apps.&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/PC_CLcNUPnA" height="1" width="1" alt=""/&gt;</content><summary>So far our jBPM Business Applications demos have involved some sort of web-based UI for interacting with our business processes. Sometimes a web-ui is not needed and working with processes via an interactive terminal is the best way to get this done. In this demo we show how to use Spring Shell inside your jBPM Business Application created via start.jbpm.org. Here is a quick screenshot of the demo...</summary><dc:creator>Tihomir Surdilovic</dc:creator><dc:date>2018-12-10T15:22:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/12/jbpm-business-applications-demo-process.html</feedburner:origLink></entry></feed>
